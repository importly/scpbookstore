"""
This type stub file was generated by pyright.
"""

import abc

class BaseImage:
    """
    Base QRCode image output class.
    """
    kind = ...
    allowed_kinds = ...
    needs_context = ...
    needs_processing = ...
    def __init__(self, border, width, box_size, *args, **kwargs) -> None:
        ...
    
    @abc.abstractmethod
    def drawrect(self, row, col): # -> None:
        """
        Draw a single rectangle of the QR code.
        """
        ...
    
    def drawrect_context(self, row, col, active, context):
        """
        Draw a single rectangle of the QR code given the surrounding context
        """
        ...
    
    def process(self):
        """
        Processes QR code after completion
        """
        ...
    
    @abc.abstractmethod
    def save(self, stream, kind=...): # -> None:
        """
        Save the image file.
        """
        ...
    
    def pixel_box(self, row, col): # -> list[tuple[Unknown, Unknown]]:
        """
        A helper method for pixel-based image generators that specifies the
        four pixel coordinates for a single rect.
        """
        ...
    
    @abc.abstractmethod
    def new_image(self, **kwargs): # -> None:
        """
        Build the image class. Subclasses should return the class created.
        """
        ...
    
    def get_image(self, **kwargs): # -> None:
        """
        Return the image class for further processing.
        """
        ...
    
    def check_kind(self, kind, transform=...): # -> None:
        """
        Get the image type.
        """
        ...
    


